<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.apress.prospring5.ch7.SingerDaoTest" tests="6" skipped="0" failures="0" errors="0" timestamp="2019-02-01T23:01:39" hostname="simon-XPS-15-9560" time="4.906">
  <properties/>
  <testcase name="testFindAll" classname="com.apress.prospring5.ch7.SingerDaoTest" time="3.509"/>
  <testcase name="testFindByID" classname="com.apress.prospring5.ch7.SingerDaoTest" time="0.347"/>
  <testcase name="testFindAllWithAlbum" classname="com.apress.prospring5.ch7.SingerDaoTest" time="0.277"/>
  <testcase name="testDelete" classname="com.apress.prospring5.ch7.SingerDaoTest" time="0.27"/>
  <testcase name="testInsert" classname="com.apress.prospring5.ch7.SingerDaoTest" time="0.237"/>
  <testcase name="testUpdate" classname="com.apress.prospring5.ch7.SingerDaoTest" time="0.265"/>
  <system-out><![CDATA[18:31:39,469 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml]
18:31:39,470 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy]
18:31:39,471 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [file:/media/simon/OS/opt/book/pro%20spring%205/small/chapter07/hibernate-crud/build/resources/main/logback.xml]
18:31:39,474 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs multiple times on the classpath.
18:31:39,474 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [file:/media/simon/OS/opt/book/pro%20spring%205/small/chapter07/hibernate-crud/build/resources/main/logback.xml]
18:31:39,474 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [jar:file:/media/simon/OS/opt/book/pro%20spring%205/small/chapter06/plain-jdbc/build/libs/plain-jdbc-5.0-SNAPSHOT.jar!/logback.xml]
18:31:39,636 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set
18:31:39,641 |-INFO in ch.qos.logback.classic.joran.action.LoggerContextListenerAction - Adding LoggerContextListener of type [ch.qos.logback.classic.jul.LevelChangePropagator] to the object stack
18:31:39,661 |-INFO in ch.qos.logback.classic.jul.LevelChangePropagator@36be654b - Propagating DEBUG level on Logger[ROOT] onto the JUL framework
18:31:39,661 |-INFO in ch.qos.logback.classic.joran.action.LoggerContextListenerAction - Starting LoggerContextListener
18:31:39,661 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
18:31:39,667 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [console]
18:31:39,669 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
18:31:39,726 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [com.apress.prospring5.ch7] to DEBUG
18:31:39,726 |-INFO in ch.qos.logback.classic.jul.LevelChangePropagator@36be654b - Propagating DEBUG level on Logger[com.apress.prospring5.ch7] onto the JUL framework
18:31:39,726 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.springframework] to OFF
18:31:39,726 |-INFO in ch.qos.logback.classic.jul.LevelChangePropagator@36be654b - Propagating OFF level on Logger[org.springframework] onto the JUL framework
18:31:39,726 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to INFO
18:31:39,726 |-INFO in ch.qos.logback.classic.jul.LevelChangePropagator@36be654b - Propagating INFO level on Logger[ROOT] onto the JUL framework
18:31:39,727 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [console] to Logger[ROOT]
18:31:39,727 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.
18:31:39,728 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@268e074a - Registering current configuration as safe fallback point

18:31:41.114 [Test worker] INFO  o.h.Version - HHH000412: Hibernate Core {5.2.10.Final}
18:31:41.128 [Test worker] INFO  o.h.c.Environment - HHH000206: hibernate.properties not found
18:31:41.212 [Test worker] INFO  o.h.a.c.Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
18:31:41.643 [Test worker] INFO  o.h.d.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: 
    
    drop table album if exists
Hibernate: 
    
    drop table instrument if exists
Hibernate: 
    
    drop table singer if exists
Hibernate: 
    
    drop table singer_instrument if exists
Hibernate: 
    
    drop sequence if exists hibernate_sequence
Hibernate: create sequence hibernate_sequence start with 1 increment by 1
Hibernate: 
    
    create table album (
       id bigint not null,
        VERSION integer,
        RELEASE_DATE date,
        title varchar(255),
        SINGER_ID bigint,
        primary key (id)
    )
Hibernate: 
    
    create table instrument (
       INSTRUMENT_ID varchar(255) not null,
        primary key (INSTRUMENT_ID)
    )
Hibernate: 
    
    create table singer (
       id bigint not null,
        VERSION integer,
        BIRTH_DATE date,
        FIRST_NAME varchar(255),
        LAST_NAME varchar(255),
        primary key (id)
    )
Hibernate: 
    
    create table singer_instrument (
       SINGER_ID bigint not null,
        INSTRUMENT_ID varchar(255) not null,
        primary key (INSTRUMENT_ID, SINGER_ID)
    )
Hibernate: 
    
    alter table album 
       add constraint FKsu76te7e01esmhbxtsudsdnql 
       foreign key (SINGER_ID) 
       references singer
Hibernate: 
    
    alter table singer_instrument 
       add constraint FK2b5u8pgm9g6qikqcq4lpngn33 
       foreign key (INSTRUMENT_ID) 
       references instrument
Hibernate: 
    
    alter table singer_instrument 
       add constraint FK7cns9kt2xpdjavoy95w3a1m2p 
       foreign key (SINGER_ID) 
       references singer
18:31:42.740 [Test worker] INFO  o.h.t.s.i.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@50a824ab'
18:31:42.762 [Test worker] INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
18:31:42.932 [Test worker] INFO  c.a.p.c.c.DBInitializer - Starting database initialization...
Hibernate: 
    /* get current state com.apress.prospring5.ch7.entities.Instrument */ select
        instrument_.INSTRUMENT_ID 
    from
        instrument instrument_ 
    where
        instrument_.INSTRUMENT_ID=?
18:31:43.098 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Instrument saved with id: Guitar
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Instrument
        */ insert 
        into
            instrument
            (INSTRUMENT_ID) 
        values
            (?)
Hibernate: 
    /* get current state com.apress.prospring5.ch7.entities.Instrument */ select
        instrument_.INSTRUMENT_ID 
    from
        instrument instrument_ 
    where
        instrument_.INSTRUMENT_ID=?
18:31:43.121 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Instrument saved with id: Piano
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Instrument
        */ insert 
        into
            instrument
            (INSTRUMENT_ID) 
        values
            (?)
Hibernate: 
    /* get current state com.apress.prospring5.ch7.entities.Instrument */ select
        instrument_.INSTRUMENT_ID 
    from
        instrument instrument_ 
    where
        instrument_.INSTRUMENT_ID=?
18:31:43.123 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Instrument saved with id: Voice
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Instrument
        */ insert 
        into
            instrument
            (INSTRUMENT_ID) 
        values
            (?)
Hibernate: 
    call next value for hibernate_sequence
Hibernate: 
    call next value for hibernate_sequence
Hibernate: 
    call next value for hibernate_sequence
18:31:43.131 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Singer saved with id: 1
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Singer
        */ insert 
        into
            singer
            (VERSION, BIRTH_DATE, FIRST_NAME, LAST_NAME, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Album
        */ insert 
        into
            album
            (VERSION, RELEASE_DATE, SINGER_ID, title, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Album
        */ insert 
        into
            album
            (VERSION, RELEASE_DATE, SINGER_ID, title, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
Hibernate: 
    call next value for hibernate_sequence
Hibernate: 
    call next value for hibernate_sequence
18:31:43.140 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Singer saved with id: 4
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Singer
        */ insert 
        into
            singer
            (VERSION, BIRTH_DATE, FIRST_NAME, LAST_NAME, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Album
        */ insert 
        into
            album
            (VERSION, RELEASE_DATE, SINGER_ID, title, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
Hibernate: 
    call next value for hibernate_sequence
18:31:43.143 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Singer saved with id: 6
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Singer
        */ insert 
        into
            singer
            (VERSION, BIRTH_DATE, FIRST_NAME, LAST_NAME, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
18:31:43.144 [Test worker] INFO  c.a.p.c.c.DBInitializer - Database initialization finished.
Hibernate: 
    /* 
from
    Singer s */ select
        singer0_.id as id1_2_,
        singer0_.VERSION as VERSION2_2_,
        singer0_.BIRTH_DATE as BIRTH_DA3_2_,
        singer0_.FIRST_NAME as FIRST_NA4_2_,
        singer0_.LAST_NAME as LAST_NAM5_2_ 
    from
        singer singer0_
18:31:43.224 [Test worker] INFO  c.a.p.c.SingerDaoTest -  ---- Listing singers:
18:31:43.225 [Test worker] INFO  c.a.p.c.SingerDaoTest - Singer - id: 1, First name: John, Last name: Mayer, Birthday: 1977-10-16
18:31:43.225 [Test worker] INFO  c.a.p.c.SingerDaoTest - Singer - id: 4, First name: Eric, Last name: Clapton, Birthday: 1945-03-30
18:31:43.225 [Test worker] INFO  c.a.p.c.SingerDaoTest - Singer - id: 6, First name: John, Last name: Butler, Birthday: 1975-04-01
18:31:43.226 [Test worker] INFO  c.a.p.c.CleanUp -  ... Deleting database files.
18:31:43.238 [Test worker] INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down'
Hibernate: 
    
    drop table album if exists
Hibernate: 
    
    drop table instrument if exists
Hibernate: 
    
    drop table singer if exists
Hibernate: 
    
    drop table singer_instrument if exists
Hibernate: 
    
    drop sequence if exists hibernate_sequence
18:31:43.440 [Test worker] INFO  o.h.d.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: 
    
    drop table album if exists
Hibernate: 
    
    drop table instrument if exists
Hibernate: 
    
    drop table singer if exists
Hibernate: 
    
    drop table singer_instrument if exists
Hibernate: 
    
    drop sequence if exists hibernate_sequence
Hibernate: create sequence hibernate_sequence start with 1 increment by 1
Hibernate: 
    
    create table album (
       id bigint not null,
        VERSION integer,
        RELEASE_DATE date,
        title varchar(255),
        SINGER_ID bigint,
        primary key (id)
    )
Hibernate: 
    
    create table instrument (
       INSTRUMENT_ID varchar(255) not null,
        primary key (INSTRUMENT_ID)
    )
Hibernate: 
    
    create table singer (
       id bigint not null,
        VERSION integer,
        BIRTH_DATE date,
        FIRST_NAME varchar(255),
        LAST_NAME varchar(255),
        primary key (id)
    )
Hibernate: 
    
    create table singer_instrument (
       SINGER_ID bigint not null,
        INSTRUMENT_ID varchar(255) not null,
        primary key (INSTRUMENT_ID, SINGER_ID)
    )
Hibernate: 
    
    alter table album 
       add constraint FKsu76te7e01esmhbxtsudsdnql 
       foreign key (SINGER_ID) 
       references singer
Hibernate: 
    
    alter table singer_instrument 
       add constraint FK2b5u8pgm9g6qikqcq4lpngn33 
       foreign key (INSTRUMENT_ID) 
       references instrument
Hibernate: 
    
    alter table singer_instrument 
       add constraint FK7cns9kt2xpdjavoy95w3a1m2p 
       foreign key (SINGER_ID) 
       references singer
18:31:43.478 [Test worker] INFO  o.h.t.s.i.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@50a824ab'
18:31:43.488 [Test worker] INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
18:31:43.517 [Test worker] INFO  c.a.p.c.c.DBInitializer - Starting database initialization...
Hibernate: 
    /* get current state com.apress.prospring5.ch7.entities.Instrument */ select
        instrument_.INSTRUMENT_ID 
    from
        instrument instrument_ 
    where
        instrument_.INSTRUMENT_ID=?
18:31:43.527 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Instrument saved with id: Guitar
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Instrument
        */ insert 
        into
            instrument
            (INSTRUMENT_ID) 
        values
            (?)
Hibernate: 
    /* get current state com.apress.prospring5.ch7.entities.Instrument */ select
        instrument_.INSTRUMENT_ID 
    from
        instrument instrument_ 
    where
        instrument_.INSTRUMENT_ID=?
18:31:43.530 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Instrument saved with id: Piano
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Instrument
        */ insert 
        into
            instrument
            (INSTRUMENT_ID) 
        values
            (?)
Hibernate: 
    /* get current state com.apress.prospring5.ch7.entities.Instrument */ select
        instrument_.INSTRUMENT_ID 
    from
        instrument instrument_ 
    where
        instrument_.INSTRUMENT_ID=?
18:31:43.532 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Instrument saved with id: Voice
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Instrument
        */ insert 
        into
            instrument
            (INSTRUMENT_ID) 
        values
            (?)
Hibernate: 
    call next value for hibernate_sequence
Hibernate: 
    call next value for hibernate_sequence
Hibernate: 
    call next value for hibernate_sequence
18:31:43.536 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Singer saved with id: 1
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Singer
        */ insert 
        into
            singer
            (VERSION, BIRTH_DATE, FIRST_NAME, LAST_NAME, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Album
        */ insert 
        into
            album
            (VERSION, RELEASE_DATE, SINGER_ID, title, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Album
        */ insert 
        into
            album
            (VERSION, RELEASE_DATE, SINGER_ID, title, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
Hibernate: 
    call next value for hibernate_sequence
Hibernate: 
    call next value for hibernate_sequence
18:31:43.542 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Singer saved with id: 4
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Singer
        */ insert 
        into
            singer
            (VERSION, BIRTH_DATE, FIRST_NAME, LAST_NAME, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Album
        */ insert 
        into
            album
            (VERSION, RELEASE_DATE, SINGER_ID, title, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
Hibernate: 
    call next value for hibernate_sequence
18:31:43.545 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Singer saved with id: 6
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Singer
        */ insert 
        into
            singer
            (VERSION, BIRTH_DATE, FIRST_NAME, LAST_NAME, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
18:31:43.547 [Test worker] INFO  c.a.p.c.c.DBInitializer - Database initialization finished.
Hibernate: 
    /* Singer.findById */ select
        distinct singer0_.id as id1_2_0_,
        albums1_.id as id1_0_1_,
        instrument3_.INSTRUMENT_ID as INSTRUME1_1_2_,
        singer0_.VERSION as VERSION2_2_0_,
        singer0_.BIRTH_DATE as BIRTH_DA3_2_0_,
        singer0_.FIRST_NAME as FIRST_NA4_2_0_,
        singer0_.LAST_NAME as LAST_NAM5_2_0_,
        albums1_.VERSION as VERSION2_0_1_,
        albums1_.RELEASE_DATE as RELEASE_3_0_1_,
        albums1_.SINGER_ID as SINGER_I5_0_1_,
        albums1_.title as title4_0_1_,
        albums1_.SINGER_ID as SINGER_I5_0_0__,
        albums1_.id as id1_0_0__,
        instrument2_.SINGER_ID as SINGER_I1_3_1__,
        instrument2_.INSTRUMENT_ID as INSTRUME2_3_1__ 
    from
        singer singer0_ 
    left outer join
        album albums1_ 
            on singer0_.id=albums1_.SINGER_ID 
    left outer join
        singer_instrument instrument2_ 
            on singer0_.id=instrument2_.SINGER_ID 
    left outer join
        instrument instrument3_ 
            on instrument2_.INSTRUMENT_ID=instrument3_.INSTRUMENT_ID 
    where
        singer0_.id=?
18:31:43.586 [Test worker] INFO  c.a.p.c.SingerDaoTest - Singer - id: 1, First name: John, Last name: Mayer, Birthday: 1977-10-16
18:31:43.587 [Test worker] INFO  c.a.p.c.CleanUp -  ... Deleting database files.
18:31:43.591 [Test worker] INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down'
Hibernate: 
    
    drop table album if exists
Hibernate: 
    
    drop table instrument if exists
Hibernate: 
    
    drop table singer if exists
Hibernate: 
    
    drop table singer_instrument if exists
Hibernate: 
    
    drop sequence if exists hibernate_sequence
18:31:43.737 [Test worker] INFO  o.h.d.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: 
    
    drop table album if exists
Hibernate: 
    
    drop table instrument if exists
Hibernate: 
    
    drop table singer if exists
Hibernate: 
    
    drop table singer_instrument if exists
Hibernate: 
    
    drop sequence if exists hibernate_sequence
Hibernate: create sequence hibernate_sequence start with 1 increment by 1
Hibernate: 
    
    create table album (
       id bigint not null,
        VERSION integer,
        RELEASE_DATE date,
        title varchar(255),
        SINGER_ID bigint,
        primary key (id)
    )
Hibernate: 
    
    create table instrument (
       INSTRUMENT_ID varchar(255) not null,
        primary key (INSTRUMENT_ID)
    )
Hibernate: 
    
    create table singer (
       id bigint not null,
        VERSION integer,
        BIRTH_DATE date,
        FIRST_NAME varchar(255),
        LAST_NAME varchar(255),
        primary key (id)
    )
Hibernate: 
    
    create table singer_instrument (
       SINGER_ID bigint not null,
        INSTRUMENT_ID varchar(255) not null,
        primary key (INSTRUMENT_ID, SINGER_ID)
    )
Hibernate: 
    
    alter table album 
       add constraint FKsu76te7e01esmhbxtsudsdnql 
       foreign key (SINGER_ID) 
       references singer
Hibernate: 
    
    alter table singer_instrument 
       add constraint FK2b5u8pgm9g6qikqcq4lpngn33 
       foreign key (INSTRUMENT_ID) 
       references instrument
Hibernate: 
    
    alter table singer_instrument 
       add constraint FK7cns9kt2xpdjavoy95w3a1m2p 
       foreign key (SINGER_ID) 
       references singer
18:31:43.770 [Test worker] INFO  o.h.t.s.i.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@50a824ab'
18:31:43.780 [Test worker] INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
18:31:43.805 [Test worker] INFO  c.a.p.c.c.DBInitializer - Starting database initialization...
Hibernate: 
    /* get current state com.apress.prospring5.ch7.entities.Instrument */ select
        instrument_.INSTRUMENT_ID 
    from
        instrument instrument_ 
    where
        instrument_.INSTRUMENT_ID=?
18:31:43.817 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Instrument saved with id: Guitar
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Instrument
        */ insert 
        into
            instrument
            (INSTRUMENT_ID) 
        values
            (?)
Hibernate: 
    /* get current state com.apress.prospring5.ch7.entities.Instrument */ select
        instrument_.INSTRUMENT_ID 
    from
        instrument instrument_ 
    where
        instrument_.INSTRUMENT_ID=?
18:31:43.819 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Instrument saved with id: Piano
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Instrument
        */ insert 
        into
            instrument
            (INSTRUMENT_ID) 
        values
            (?)
Hibernate: 
    /* get current state com.apress.prospring5.ch7.entities.Instrument */ select
        instrument_.INSTRUMENT_ID 
    from
        instrument instrument_ 
    where
        instrument_.INSTRUMENT_ID=?
18:31:43.821 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Instrument saved with id: Voice
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Instrument
        */ insert 
        into
            instrument
            (INSTRUMENT_ID) 
        values
            (?)
Hibernate: 
    call next value for hibernate_sequence
Hibernate: 
    call next value for hibernate_sequence
Hibernate: 
    call next value for hibernate_sequence
18:31:43.825 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Singer saved with id: 1
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Singer
        */ insert 
        into
            singer
            (VERSION, BIRTH_DATE, FIRST_NAME, LAST_NAME, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Album
        */ insert 
        into
            album
            (VERSION, RELEASE_DATE, SINGER_ID, title, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Album
        */ insert 
        into
            album
            (VERSION, RELEASE_DATE, SINGER_ID, title, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
Hibernate: 
    call next value for hibernate_sequence
Hibernate: 
    call next value for hibernate_sequence
18:31:43.829 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Singer saved with id: 4
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Singer
        */ insert 
        into
            singer
            (VERSION, BIRTH_DATE, FIRST_NAME, LAST_NAME, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Album
        */ insert 
        into
            album
            (VERSION, RELEASE_DATE, SINGER_ID, title, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
Hibernate: 
    call next value for hibernate_sequence
18:31:43.832 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Singer saved with id: 6
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Singer
        */ insert 
        into
            singer
            (VERSION, BIRTH_DATE, FIRST_NAME, LAST_NAME, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
18:31:43.834 [Test worker] INFO  c.a.p.c.c.DBInitializer - Database initialization finished.
Hibernate: 
    /* Singer.findAllWithAlbum */ select
        distinct singer0_.id as id1_2_0_,
        albums1_.id as id1_0_1_,
        instrument3_.INSTRUMENT_ID as INSTRUME1_1_2_,
        singer0_.VERSION as VERSION2_2_0_,
        singer0_.BIRTH_DATE as BIRTH_DA3_2_0_,
        singer0_.FIRST_NAME as FIRST_NA4_2_0_,
        singer0_.LAST_NAME as LAST_NAM5_2_0_,
        albums1_.VERSION as VERSION2_0_1_,
        albums1_.RELEASE_DATE as RELEASE_3_0_1_,
        albums1_.SINGER_ID as SINGER_I5_0_1_,
        albums1_.title as title4_0_1_,
        albums1_.SINGER_ID as SINGER_I5_0_0__,
        albums1_.id as id1_0_0__,
        instrument2_.SINGER_ID as SINGER_I1_3_1__,
        instrument2_.INSTRUMENT_ID as INSTRUME2_3_1__ 
    from
        singer singer0_ 
    left outer join
        album albums1_ 
            on singer0_.id=albums1_.SINGER_ID 
    left outer join
        singer_instrument instrument2_ 
            on singer0_.id=instrument2_.SINGER_ID 
    left outer join
        instrument instrument3_ 
            on instrument2_.INSTRUMENT_ID=instrument3_.INSTRUMENT_ID
18:31:43.861 [Test worker] INFO  c.a.p.c.SingerDaoTest -  ---- Listing singers with instruments:
18:31:43.862 [Test worker] INFO  c.a.p.c.SingerDaoTest - Singer - id: 1, First name: John, Last name: Mayer, Birthday: 1977-10-16
18:31:43.863 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Album - id: 3, Singer id: 1, Title: The Search For Everything, Release Date: 2017-01-20
18:31:43.863 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Album - id: 2, Singer id: 1, Title: Battle Studies, Release Date: 2009-11-17
18:31:43.864 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Instrument: Piano
18:31:43.864 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Instrument: Guitar
18:31:43.864 [Test worker] INFO  c.a.p.c.SingerDaoTest - Singer - id: 6, First name: John, Last name: Butler, Birthday: 1975-04-01
18:31:43.864 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Instrument: Guitar
18:31:43.864 [Test worker] INFO  c.a.p.c.SingerDaoTest - Singer - id: 4, First name: Eric, Last name: Clapton, Birthday: 1945-03-30
18:31:43.865 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Album - id: 5, Singer id: 4, Title: From The Cradle, Release Date: 1994-09-13
18:31:43.865 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Instrument: Guitar
18:31:43.865 [Test worker] INFO  c.a.p.c.CleanUp -  ... Deleting database files.
18:31:43.868 [Test worker] INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down'
Hibernate: 
    
    drop table album if exists
Hibernate: 
    
    drop table instrument if exists
Hibernate: 
    
    drop table singer if exists
Hibernate: 
    
    drop table singer_instrument if exists
Hibernate: 
    
    drop sequence if exists hibernate_sequence
18:31:43.991 [Test worker] INFO  o.h.d.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: 
    
    drop table album if exists
Hibernate: 
    
    drop table instrument if exists
Hibernate: 
    
    drop table singer if exists
Hibernate: 
    
    drop table singer_instrument if exists
Hibernate: 
    
    drop sequence if exists hibernate_sequence
Hibernate: create sequence hibernate_sequence start with 1 increment by 1
Hibernate: 
    
    create table album (
       id bigint not null,
        VERSION integer,
        RELEASE_DATE date,
        title varchar(255),
        SINGER_ID bigint,
        primary key (id)
    )
Hibernate: 
    
    create table instrument (
       INSTRUMENT_ID varchar(255) not null,
        primary key (INSTRUMENT_ID)
    )
Hibernate: 
    
    create table singer (
       id bigint not null,
        VERSION integer,
        BIRTH_DATE date,
        FIRST_NAME varchar(255),
        LAST_NAME varchar(255),
        primary key (id)
    )
Hibernate: 
    
    create table singer_instrument (
       SINGER_ID bigint not null,
        INSTRUMENT_ID varchar(255) not null,
        primary key (INSTRUMENT_ID, SINGER_ID)
    )
Hibernate: 
    
    alter table album 
       add constraint FKsu76te7e01esmhbxtsudsdnql 
       foreign key (SINGER_ID) 
       references singer
Hibernate: 
    
    alter table singer_instrument 
       add constraint FK2b5u8pgm9g6qikqcq4lpngn33 
       foreign key (INSTRUMENT_ID) 
       references instrument
Hibernate: 
    
    alter table singer_instrument 
       add constraint FK7cns9kt2xpdjavoy95w3a1m2p 
       foreign key (SINGER_ID) 
       references singer
18:31:44.030 [Test worker] INFO  o.h.t.s.i.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@50a824ab'
18:31:44.043 [Test worker] INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
18:31:44.066 [Test worker] INFO  c.a.p.c.c.DBInitializer - Starting database initialization...
Hibernate: 
    /* get current state com.apress.prospring5.ch7.entities.Instrument */ select
        instrument_.INSTRUMENT_ID 
    from
        instrument instrument_ 
    where
        instrument_.INSTRUMENT_ID=?
18:31:44.074 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Instrument saved with id: Guitar
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Instrument
        */ insert 
        into
            instrument
            (INSTRUMENT_ID) 
        values
            (?)
Hibernate: 
    /* get current state com.apress.prospring5.ch7.entities.Instrument */ select
        instrument_.INSTRUMENT_ID 
    from
        instrument instrument_ 
    where
        instrument_.INSTRUMENT_ID=?
18:31:44.076 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Instrument saved with id: Piano
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Instrument
        */ insert 
        into
            instrument
            (INSTRUMENT_ID) 
        values
            (?)
Hibernate: 
    /* get current state com.apress.prospring5.ch7.entities.Instrument */ select
        instrument_.INSTRUMENT_ID 
    from
        instrument instrument_ 
    where
        instrument_.INSTRUMENT_ID=?
18:31:44.078 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Instrument saved with id: Voice
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Instrument
        */ insert 
        into
            instrument
            (INSTRUMENT_ID) 
        values
            (?)
Hibernate: 
    call next value for hibernate_sequence
Hibernate: 
    call next value for hibernate_sequence
Hibernate: 
    call next value for hibernate_sequence
18:31:44.082 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Singer saved with id: 1
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Singer
        */ insert 
        into
            singer
            (VERSION, BIRTH_DATE, FIRST_NAME, LAST_NAME, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Album
        */ insert 
        into
            album
            (VERSION, RELEASE_DATE, SINGER_ID, title, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Album
        */ insert 
        into
            album
            (VERSION, RELEASE_DATE, SINGER_ID, title, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
Hibernate: 
    call next value for hibernate_sequence
Hibernate: 
    call next value for hibernate_sequence
18:31:44.087 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Singer saved with id: 4
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Singer
        */ insert 
        into
            singer
            (VERSION, BIRTH_DATE, FIRST_NAME, LAST_NAME, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Album
        */ insert 
        into
            album
            (VERSION, RELEASE_DATE, SINGER_ID, title, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
Hibernate: 
    call next value for hibernate_sequence
18:31:44.089 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Singer saved with id: 6
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Singer
        */ insert 
        into
            singer
            (VERSION, BIRTH_DATE, FIRST_NAME, LAST_NAME, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
18:31:44.091 [Test worker] INFO  c.a.p.c.c.DBInitializer - Database initialization finished.
Hibernate: 
    /* Singer.findById */ select
        distinct singer0_.id as id1_2_0_,
        albums1_.id as id1_0_1_,
        instrument3_.INSTRUMENT_ID as INSTRUME1_1_2_,
        singer0_.VERSION as VERSION2_2_0_,
        singer0_.BIRTH_DATE as BIRTH_DA3_2_0_,
        singer0_.FIRST_NAME as FIRST_NA4_2_0_,
        singer0_.LAST_NAME as LAST_NAM5_2_0_,
        albums1_.VERSION as VERSION2_0_1_,
        albums1_.RELEASE_DATE as RELEASE_3_0_1_,
        albums1_.SINGER_ID as SINGER_I5_0_1_,
        albums1_.title as title4_0_1_,
        albums1_.SINGER_ID as SINGER_I5_0_0__,
        albums1_.id as id1_0_0__,
        instrument2_.SINGER_ID as SINGER_I1_3_1__,
        instrument2_.INSTRUMENT_ID as INSTRUME2_3_1__ 
    from
        singer singer0_ 
    left outer join
        album albums1_ 
            on singer0_.id=albums1_.SINGER_ID 
    left outer join
        singer_instrument instrument2_ 
            on singer0_.id=instrument2_.SINGER_ID 
    left outer join
        instrument instrument3_ 
            on instrument2_.INSTRUMENT_ID=instrument3_.INSTRUMENT_ID 
    where
        singer0_.id=?
18:31:44.125 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Singer deleted with id: 4
Hibernate: 
    /* delete collection com.apress.prospring5.ch7.entities.Singer.instruments */ delete 
        from
            singer_instrument 
        where
            SINGER_ID=?
Hibernate: 
    /* delete com.apress.prospring5.ch7.entities.Album */ delete 
        from
            album 
        where
            id=? 
            and VERSION=?
Hibernate: 
    /* delete com.apress.prospring5.ch7.entities.Singer */ delete 
        from
            singer 
        where
            id=? 
            and VERSION=?
Hibernate: 
    /* Singer.findAllWithAlbum */ select
        distinct singer0_.id as id1_2_0_,
        albums1_.id as id1_0_1_,
        instrument3_.INSTRUMENT_ID as INSTRUME1_1_2_,
        singer0_.VERSION as VERSION2_2_0_,
        singer0_.BIRTH_DATE as BIRTH_DA3_2_0_,
        singer0_.FIRST_NAME as FIRST_NA4_2_0_,
        singer0_.LAST_NAME as LAST_NAM5_2_0_,
        albums1_.VERSION as VERSION2_0_1_,
        albums1_.RELEASE_DATE as RELEASE_3_0_1_,
        albums1_.SINGER_ID as SINGER_I5_0_1_,
        albums1_.title as title4_0_1_,
        albums1_.SINGER_ID as SINGER_I5_0_0__,
        albums1_.id as id1_0_0__,
        instrument2_.SINGER_ID as SINGER_I1_3_1__,
        instrument2_.INSTRUMENT_ID as INSTRUME2_3_1__ 
    from
        singer singer0_ 
    left outer join
        album albums1_ 
            on singer0_.id=albums1_.SINGER_ID 
    left outer join
        singer_instrument instrument2_ 
            on singer0_.id=instrument2_.SINGER_ID 
    left outer join
        instrument instrument3_ 
            on instrument2_.INSTRUMENT_ID=instrument3_.INSTRUMENT_ID
18:31:44.135 [Test worker] INFO  c.a.p.c.SingerDaoTest -  ---- Listing singers with instruments:
18:31:44.136 [Test worker] INFO  c.a.p.c.SingerDaoTest - Singer - id: 1, First name: John, Last name: Mayer, Birthday: 1977-10-16
18:31:44.136 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Album - id: 3, Singer id: 1, Title: The Search For Everything, Release Date: 2017-01-20
18:31:44.136 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Album - id: 2, Singer id: 1, Title: Battle Studies, Release Date: 2009-11-17
18:31:44.136 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Instrument: Guitar
18:31:44.136 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Instrument: Piano
18:31:44.136 [Test worker] INFO  c.a.p.c.SingerDaoTest - Singer - id: 6, First name: John, Last name: Butler, Birthday: 1975-04-01
18:31:44.136 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Instrument: Guitar
18:31:44.137 [Test worker] INFO  c.a.p.c.CleanUp -  ... Deleting database files.
18:31:44.139 [Test worker] INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down'
Hibernate: 
    
    drop table album if exists
Hibernate: 
    
    drop table instrument if exists
Hibernate: 
    
    drop table singer if exists
Hibernate: 
    
    drop table singer_instrument if exists
Hibernate: 
    
    drop sequence if exists hibernate_sequence
18:31:44.268 [Test worker] INFO  o.h.d.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: 
    
    drop table album if exists
Hibernate: 
    
    drop table instrument if exists
Hibernate: 
    
    drop table singer if exists
Hibernate: 
    
    drop table singer_instrument if exists
Hibernate: 
    
    drop sequence if exists hibernate_sequence
Hibernate: create sequence hibernate_sequence start with 1 increment by 1
Hibernate: 
    
    create table album (
       id bigint not null,
        VERSION integer,
        RELEASE_DATE date,
        title varchar(255),
        SINGER_ID bigint,
        primary key (id)
    )
Hibernate: 
    
    create table instrument (
       INSTRUMENT_ID varchar(255) not null,
        primary key (INSTRUMENT_ID)
    )
Hibernate: 
    
    create table singer (
       id bigint not null,
        VERSION integer,
        BIRTH_DATE date,
        FIRST_NAME varchar(255),
        LAST_NAME varchar(255),
        primary key (id)
    )
Hibernate: 
    
    create table singer_instrument (
       SINGER_ID bigint not null,
        INSTRUMENT_ID varchar(255) not null,
        primary key (INSTRUMENT_ID, SINGER_ID)
    )
Hibernate: 
    
    alter table album 
       add constraint FKsu76te7e01esmhbxtsudsdnql 
       foreign key (SINGER_ID) 
       references singer
Hibernate: 
    
    alter table singer_instrument 
       add constraint FK2b5u8pgm9g6qikqcq4lpngn33 
       foreign key (INSTRUMENT_ID) 
       references instrument
Hibernate: 
    
    alter table singer_instrument 
       add constraint FK7cns9kt2xpdjavoy95w3a1m2p 
       foreign key (SINGER_ID) 
       references singer
18:31:44.300 [Test worker] INFO  o.h.t.s.i.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@50a824ab'
18:31:44.312 [Test worker] INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
18:31:44.335 [Test worker] INFO  c.a.p.c.c.DBInitializer - Starting database initialization...
Hibernate: 
    /* get current state com.apress.prospring5.ch7.entities.Instrument */ select
        instrument_.INSTRUMENT_ID 
    from
        instrument instrument_ 
    where
        instrument_.INSTRUMENT_ID=?
18:31:44.340 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Instrument saved with id: Guitar
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Instrument
        */ insert 
        into
            instrument
            (INSTRUMENT_ID) 
        values
            (?)
Hibernate: 
    /* get current state com.apress.prospring5.ch7.entities.Instrument */ select
        instrument_.INSTRUMENT_ID 
    from
        instrument instrument_ 
    where
        instrument_.INSTRUMENT_ID=?
18:31:44.342 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Instrument saved with id: Piano
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Instrument
        */ insert 
        into
            instrument
            (INSTRUMENT_ID) 
        values
            (?)
Hibernate: 
    /* get current state com.apress.prospring5.ch7.entities.Instrument */ select
        instrument_.INSTRUMENT_ID 
    from
        instrument instrument_ 
    where
        instrument_.INSTRUMENT_ID=?
18:31:44.343 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Instrument saved with id: Voice
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Instrument
        */ insert 
        into
            instrument
            (INSTRUMENT_ID) 
        values
            (?)
Hibernate: 
    call next value for hibernate_sequence
Hibernate: 
    call next value for hibernate_sequence
Hibernate: 
    call next value for hibernate_sequence
18:31:44.345 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Singer saved with id: 1
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Singer
        */ insert 
        into
            singer
            (VERSION, BIRTH_DATE, FIRST_NAME, LAST_NAME, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Album
        */ insert 
        into
            album
            (VERSION, RELEASE_DATE, SINGER_ID, title, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Album
        */ insert 
        into
            album
            (VERSION, RELEASE_DATE, SINGER_ID, title, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
Hibernate: 
    call next value for hibernate_sequence
Hibernate: 
    call next value for hibernate_sequence
18:31:44.349 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Singer saved with id: 4
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Singer
        */ insert 
        into
            singer
            (VERSION, BIRTH_DATE, FIRST_NAME, LAST_NAME, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Album
        */ insert 
        into
            album
            (VERSION, RELEASE_DATE, SINGER_ID, title, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
Hibernate: 
    call next value for hibernate_sequence
18:31:44.351 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Singer saved with id: 6
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Singer
        */ insert 
        into
            singer
            (VERSION, BIRTH_DATE, FIRST_NAME, LAST_NAME, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
18:31:44.352 [Test worker] INFO  c.a.p.c.c.DBInitializer - Database initialization finished.
Hibernate: 
    call next value for hibernate_sequence
Hibernate: 
    call next value for hibernate_sequence
Hibernate: 
    call next value for hibernate_sequence
18:31:44.368 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Singer saved with id: 7
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Singer
        */ insert 
        into
            singer
            (VERSION, BIRTH_DATE, FIRST_NAME, LAST_NAME, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Album
        */ insert 
        into
            album
            (VERSION, RELEASE_DATE, SINGER_ID, title, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Album
        */ insert 
        into
            album
            (VERSION, RELEASE_DATE, SINGER_ID, title, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* Singer.findAllWithAlbum */ select
        distinct singer0_.id as id1_2_0_,
        albums1_.id as id1_0_1_,
        instrument3_.INSTRUMENT_ID as INSTRUME1_1_2_,
        singer0_.VERSION as VERSION2_2_0_,
        singer0_.BIRTH_DATE as BIRTH_DA3_2_0_,
        singer0_.FIRST_NAME as FIRST_NA4_2_0_,
        singer0_.LAST_NAME as LAST_NAM5_2_0_,
        albums1_.VERSION as VERSION2_0_1_,
        albums1_.RELEASE_DATE as RELEASE_3_0_1_,
        albums1_.SINGER_ID as SINGER_I5_0_1_,
        albums1_.title as title4_0_1_,
        albums1_.SINGER_ID as SINGER_I5_0_0__,
        albums1_.id as id1_0_0__,
        instrument2_.SINGER_ID as SINGER_I1_3_1__,
        instrument2_.INSTRUMENT_ID as INSTRUME2_3_1__ 
    from
        singer singer0_ 
    left outer join
        album albums1_ 
            on singer0_.id=albums1_.SINGER_ID 
    left outer join
        singer_instrument instrument2_ 
            on singer0_.id=instrument2_.SINGER_ID 
    left outer join
        instrument instrument3_ 
            on instrument2_.INSTRUMENT_ID=instrument3_.INSTRUMENT_ID
18:31:44.373 [Test worker] INFO  c.a.p.c.SingerDaoTest -  ---- Listing singers with instruments:
18:31:44.373 [Test worker] INFO  c.a.p.c.SingerDaoTest - Singer - id: 6, First name: John, Last name: Butler, Birthday: 1975-04-01
18:31:44.373 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Instrument: Guitar
18:31:44.373 [Test worker] INFO  c.a.p.c.SingerDaoTest - Singer - id: 1, First name: John, Last name: Mayer, Birthday: 1977-10-16
18:31:44.373 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Album - id: 3, Singer id: 1, Title: The Search For Everything, Release Date: 2017-01-20
18:31:44.374 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Album - id: 2, Singer id: 1, Title: Battle Studies, Release Date: 2009-11-17
18:31:44.374 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Instrument: Piano
18:31:44.374 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Instrument: Guitar
18:31:44.374 [Test worker] INFO  c.a.p.c.SingerDaoTest - Singer - id: 7, First name: BB, Last name: King, Birthday: 1940-09-16
18:31:44.374 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Album - id: 8, Singer id: 7, Title: My Kind of Blues, Release Date: 1961-08-18
18:31:44.374 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Album - id: 9, Singer id: 7, Title: A Heart Full of Blues, Release Date: 1962-04-20
18:31:44.374 [Test worker] INFO  c.a.p.c.SingerDaoTest - Singer - id: 4, First name: Eric, Last name: Clapton, Birthday: 1945-03-30
18:31:44.374 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Album - id: 5, Singer id: 4, Title: From The Cradle, Release Date: 1994-09-13
18:31:44.374 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Instrument: Guitar
18:31:44.374 [Test worker] INFO  c.a.p.c.CleanUp -  ... Deleting database files.
18:31:44.377 [Test worker] INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down'
Hibernate: 
    
    drop table album if exists
Hibernate: 
    
    drop table instrument if exists
Hibernate: 
    
    drop table singer if exists
Hibernate: 
    
    drop table singer_instrument if exists
Hibernate: 
    
    drop sequence if exists hibernate_sequence
18:31:44.516 [Test worker] INFO  o.h.d.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: 
    
    drop table album if exists
Hibernate: 
    
    drop table instrument if exists
Hibernate: 
    
    drop table singer if exists
Hibernate: 
    
    drop table singer_instrument if exists
Hibernate: 
    
    drop sequence if exists hibernate_sequence
Hibernate: create sequence hibernate_sequence start with 1 increment by 1
Hibernate: 
    
    create table album (
       id bigint not null,
        VERSION integer,
        RELEASE_DATE date,
        title varchar(255),
        SINGER_ID bigint,
        primary key (id)
    )
Hibernate: 
    
    create table instrument (
       INSTRUMENT_ID varchar(255) not null,
        primary key (INSTRUMENT_ID)
    )
Hibernate: 
    
    create table singer (
       id bigint not null,
        VERSION integer,
        BIRTH_DATE date,
        FIRST_NAME varchar(255),
        LAST_NAME varchar(255),
        primary key (id)
    )
Hibernate: 
    
    create table singer_instrument (
       SINGER_ID bigint not null,
        INSTRUMENT_ID varchar(255) not null,
        primary key (INSTRUMENT_ID, SINGER_ID)
    )
Hibernate: 
    
    alter table album 
       add constraint FKsu76te7e01esmhbxtsudsdnql 
       foreign key (SINGER_ID) 
       references singer
Hibernate: 
    
    alter table singer_instrument 
       add constraint FK2b5u8pgm9g6qikqcq4lpngn33 
       foreign key (INSTRUMENT_ID) 
       references instrument
Hibernate: 
    
    alter table singer_instrument 
       add constraint FK7cns9kt2xpdjavoy95w3a1m2p 
       foreign key (SINGER_ID) 
       references singer
18:31:44.546 [Test worker] INFO  o.h.t.s.i.SchemaCreatorImpl - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@50a824ab'
18:31:44.560 [Test worker] INFO  o.h.h.i.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
18:31:44.584 [Test worker] INFO  c.a.p.c.c.DBInitializer - Starting database initialization...
Hibernate: 
    /* get current state com.apress.prospring5.ch7.entities.Instrument */ select
        instrument_.INSTRUMENT_ID 
    from
        instrument instrument_ 
    where
        instrument_.INSTRUMENT_ID=?
18:31:44.591 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Instrument saved with id: Guitar
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Instrument
        */ insert 
        into
            instrument
            (INSTRUMENT_ID) 
        values
            (?)
Hibernate: 
    /* get current state com.apress.prospring5.ch7.entities.Instrument */ select
        instrument_.INSTRUMENT_ID 
    from
        instrument instrument_ 
    where
        instrument_.INSTRUMENT_ID=?
18:31:44.593 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Instrument saved with id: Piano
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Instrument
        */ insert 
        into
            instrument
            (INSTRUMENT_ID) 
        values
            (?)
Hibernate: 
    /* get current state com.apress.prospring5.ch7.entities.Instrument */ select
        instrument_.INSTRUMENT_ID 
    from
        instrument instrument_ 
    where
        instrument_.INSTRUMENT_ID=?
18:31:44.595 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Instrument saved with id: Voice
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Instrument
        */ insert 
        into
            instrument
            (INSTRUMENT_ID) 
        values
            (?)
Hibernate: 
    call next value for hibernate_sequence
Hibernate: 
    call next value for hibernate_sequence
Hibernate: 
    call next value for hibernate_sequence
18:31:44.598 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Singer saved with id: 1
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Singer
        */ insert 
        into
            singer
            (VERSION, BIRTH_DATE, FIRST_NAME, LAST_NAME, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Album
        */ insert 
        into
            album
            (VERSION, RELEASE_DATE, SINGER_ID, title, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Album
        */ insert 
        into
            album
            (VERSION, RELEASE_DATE, SINGER_ID, title, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
Hibernate: 
    call next value for hibernate_sequence
Hibernate: 
    call next value for hibernate_sequence
18:31:44.602 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Singer saved with id: 4
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Singer
        */ insert 
        into
            singer
            (VERSION, BIRTH_DATE, FIRST_NAME, LAST_NAME, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Album
        */ insert 
        into
            album
            (VERSION, RELEASE_DATE, SINGER_ID, title, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
Hibernate: 
    call next value for hibernate_sequence
18:31:44.605 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Singer saved with id: 6
Hibernate: 
    /* insert com.apress.prospring5.ch7.entities.Singer
        */ insert 
        into
            singer
            (VERSION, BIRTH_DATE, FIRST_NAME, LAST_NAME, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert collection
        row com.apress.prospring5.ch7.entities.Singer.instruments */ insert 
        into
            singer_instrument
            (SINGER_ID, INSTRUMENT_ID) 
        values
            (?, ?)
18:31:44.606 [Test worker] INFO  c.a.p.c.c.DBInitializer - Database initialization finished.
Hibernate: 
    /* Singer.findById */ select
        distinct singer0_.id as id1_2_0_,
        albums1_.id as id1_0_1_,
        instrument3_.INSTRUMENT_ID as INSTRUME1_1_2_,
        singer0_.VERSION as VERSION2_2_0_,
        singer0_.BIRTH_DATE as BIRTH_DA3_2_0_,
        singer0_.FIRST_NAME as FIRST_NA4_2_0_,
        singer0_.LAST_NAME as LAST_NAM5_2_0_,
        albums1_.VERSION as VERSION2_0_1_,
        albums1_.RELEASE_DATE as RELEASE_3_0_1_,
        albums1_.SINGER_ID as SINGER_I5_0_1_,
        albums1_.title as title4_0_1_,
        albums1_.SINGER_ID as SINGER_I5_0_0__,
        albums1_.id as id1_0_0__,
        instrument2_.SINGER_ID as SINGER_I1_3_1__,
        instrument2_.INSTRUMENT_ID as INSTRUME2_3_1__ 
    from
        singer singer0_ 
    left outer join
        album albums1_ 
            on singer0_.id=albums1_.SINGER_ID 
    left outer join
        singer_instrument instrument2_ 
            on singer0_.id=instrument2_.SINGER_ID 
    left outer join
        instrument instrument3_ 
            on instrument2_.INSTRUMENT_ID=instrument3_.INSTRUMENT_ID 
    where
        singer0_.id=?
18:31:44.632 [Test worker] INFO  c.a.p.c.d.SingerDaoImpl - Singer saved with id: 1
Hibernate: 
    /* update
        com.apress.prospring5.ch7.entities.Singer */ update
            singer 
        set
            VERSION=?,
            BIRTH_DATE=?,
            FIRST_NAME=?,
            LAST_NAME=? 
        where
            id=? 
            and VERSION=?
Hibernate: 
    /* update
        com.apress.prospring5.ch7.entities.Album */ update
            album 
        set
            VERSION=?,
            RELEASE_DATE=?,
            SINGER_ID=?,
            title=? 
        where
            id=? 
            and VERSION=?
Hibernate: 
    /* delete com.apress.prospring5.ch7.entities.Album */ delete 
        from
            album 
        where
            id=? 
            and VERSION=?
Hibernate: 
    /* Singer.findAllWithAlbum */ select
        distinct singer0_.id as id1_2_0_,
        albums1_.id as id1_0_1_,
        instrument3_.INSTRUMENT_ID as INSTRUME1_1_2_,
        singer0_.VERSION as VERSION2_2_0_,
        singer0_.BIRTH_DATE as BIRTH_DA3_2_0_,
        singer0_.FIRST_NAME as FIRST_NA4_2_0_,
        singer0_.LAST_NAME as LAST_NAM5_2_0_,
        albums1_.VERSION as VERSION2_0_1_,
        albums1_.RELEASE_DATE as RELEASE_3_0_1_,
        albums1_.SINGER_ID as SINGER_I5_0_1_,
        albums1_.title as title4_0_1_,
        albums1_.SINGER_ID as SINGER_I5_0_0__,
        albums1_.id as id1_0_0__,
        instrument2_.SINGER_ID as SINGER_I1_3_1__,
        instrument2_.INSTRUMENT_ID as INSTRUME2_3_1__ 
    from
        singer singer0_ 
    left outer join
        album albums1_ 
            on singer0_.id=albums1_.SINGER_ID 
    left outer join
        singer_instrument instrument2_ 
            on singer0_.id=instrument2_.SINGER_ID 
    left outer join
        instrument instrument3_ 
            on instrument2_.INSTRUMENT_ID=instrument3_.INSTRUMENT_ID
18:31:44.638 [Test worker] INFO  c.a.p.c.SingerDaoTest -  ---- Listing singers with instruments:
18:31:44.638 [Test worker] INFO  c.a.p.c.SingerDaoTest - Singer - id: 1, First name: John Clayton, Last name: Mayer, Birthday: 1977-10-16
18:31:44.639 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Album - id: 3, Singer id: 1, Title: The Search For Everything, Release Date: 2017-01-20
18:31:44.639 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Instrument: Piano
18:31:44.639 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Instrument: Guitar
18:31:44.639 [Test worker] INFO  c.a.p.c.SingerDaoTest - Singer - id: 4, First name: Eric, Last name: Clapton, Birthday: 1945-03-30
18:31:44.639 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Album - id: 5, Singer id: 4, Title: From The Cradle, Release Date: 1994-09-13
18:31:44.639 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Instrument: Guitar
18:31:44.639 [Test worker] INFO  c.a.p.c.SingerDaoTest - Singer - id: 6, First name: John, Last name: Butler, Birthday: 1975-04-01
18:31:44.639 [Test worker] INFO  c.a.p.c.SingerDaoTest - 	Instrument: Guitar
18:31:44.639 [Test worker] INFO  c.a.p.c.CleanUp -  ... Deleting database files.
18:31:44.641 [Test worker] INFO  o.h.t.s.i.SchemaDropperImpl$DelayedDropActionImpl - HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down'
Hibernate: 
    
    drop table album if exists
Hibernate: 
    
    drop table instrument if exists
Hibernate: 
    
    drop table singer if exists
Hibernate: 
    
    drop table singer_instrument if exists
Hibernate: 
    
    drop sequence if exists hibernate_sequence
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
